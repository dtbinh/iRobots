import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;

import lejos.pc.comm.NXTCommBluecove;
import lejos.pc.comm.NXTCommException;
import lejos.pc.comm.NXTInfo;

public class Bluetooth 
{
	private NXTInfo info;
	private NXTCommBluecove con;
	private DataInputStream input;
	private DataOutputStream output;
	private String mac;
	private String robName;
	private boolean run;
	private Robot gandalf;
	private Robot frodo;
	private Robot aragon;
	private Robot gimli;

	
	public Bluetooth(String robName, String mac)
	{
		setMac(mac);
		setRobName(robName);
		info = new NXTInfo();
		info.deviceAddress = getMac();
		info.name = getRobName();
		con = new NXTCommBluecove();
		connect();
	}
	
	public void connect()
	{
		try 
		{
			if(con.open(info))
			{
				System.out.println("Successfull Connection with "+info.name+" :)");
				con.close();
			}
			else
			{
				System.err.println("No Connection established :(");
			}			
		} 
		catch (NXTCommException | IOException e) 
		{
			e.printStackTrace();
		}
		
	}

	public String getMac() {
		return mac;
	}

	public void setMac(String mac) {
		this.mac = mac;
	}

	public String getRobName() {
		return robName;
	}

	public void setRobName(String robName) {
		this.robName = robName;
	}

	public boolean isRun() {
		return run;
	}

	public void setRun(boolean run) {
		this.run = run;
	}
	
	
	public Robot getGandalf() {
		return gandalf;
	}

	public void setGandalf(Robot gandalf) {
		this.gandalf = gandalf;
	}

	public Robot getFrodo() {
		return frodo;
	}

	public void setFrodo(Robot frodo) {
		this.frodo = frodo;
	}

	public Robot getAragon() {
		return aragon;
	}

	public void setAragon(Robot aragon) {
		this.aragon = aragon;
	}

	public Robot getGimli() {
		return gimli;
	}

	public void setGimli(Robot gimli) {
		this.gimli = gimli;
	}
}
